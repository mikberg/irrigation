load("@npm//@bazel/esbuild:index.bzl", "esbuild")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("@npm//http-server:index.bzl", "http_server")
load("@npm//live-server:index.bzl", "live_server")

ts_project(
    name = "lib",
    srcs = glob(["src/*.tsx"]),
    tsconfig = ":tsconfig.json",
    deps = [
        "@npm//@material-ui/core",
        "@npm//@types/react",
        "@npm//@types/react-dom",
        "@npm//csstype",
        "@npm//react",
        "@npm//react-dom",
    ],
)

esbuild(
    name = "bundle",
    define = [
        "process.env.NODE_ENV=\"development\"",
    ],
    entry_point = "src/index.tsx",
    platform = "node",
    tool = select({
        "@bazel_tools//src/conditions:darwin": "@esbuild_darwin//:bin/esbuild",
        "@bazel_tools//src/conditions:windows": "@esbuild_windows//:esbuild.exe",
        "@bazel_tools//src/conditions:linux_x86_64": "@esbuild_linux//:bin/esbuild",
    }),
    deps = [
        ":lib",
    ],
)

http_server(
    name = "server",
    data = [
        "bundle.js",
        "bundle.js.map",
        "index.html",
    ],
    templated_args = ["client2"],
)

live_server(
    name = "devserver",
    data = [
        "bundle.js",
        "bundle.js.map",
        "index.html",
    ],
    tags = [
        "ibazel_notify_changes",
    ],
    templated_args = [
        "--no-browser",
        # "--watch=client2/bundle.js",
        # "--mount=/:client2",
        "--verbose",
        # "--mount",
        "client2",
    ],
)
